<!DOCTYPE html>
<html lang="en">
  <%- include('./partials/head'); %>
  <body>
    <%- include('./partials/navigation'); %>

    <div class="text-end">
      <button id="enableNotificationsButton" class="btn btn-outline-success">
        <i class="bi bi-bell"></i>
      </button>
    </div>

    <div id="posts">
      <template id="postTemplate">
        <div
                class="
                            d-flex
                            flex-column
                            align-items-center
                            p-1
                            shadow
                            p-3
                            mb-2
                            bg-white
                            rounded
                        "
        >
          <audio id="audioPlayer" controls></audio>
          <h3>title</h3>
        </div>
      </template>
    </div>

    <%- include('./partials/scripts'); %>
    <script>
      navigator.serviceWorker
              .register("./sw.js", { type: "module" })
              .then((reg) => console.log("SW registered!", reg))
              .catch((err) =>
                      console.error("Error registering service worker", err)
              );

      fetch("/posts")
              .then((res) => {
                if (res.ok) {
                  res.json().then((data) => {
                    data.files.forEach((fileName) => {
                      const postsDiv = document.querySelector("#posts");
                      const template =
                              document.querySelector("#postTemplate");
                      const clone = template.content.cloneNode(true);
                      const audio = clone.querySelector("audio");
                      audio.src = "/uploads/" + fileName;
                      const title = clone.querySelector("h3");
                      title.textContent = fileName
                              .replaceAll('_', ' ')
                              .replaceAll(".wav", "");
                      postsDiv.appendChild(clone);
                    });
                  });
                }
              })
              .catch((err) => {
                console.log(err);
              });
    </script>
    <script>
      const notificationButton = document.getElementById("enableNotificationsButton");

      if ("Notification" in window && "serviceWorker" in navigator) {
        notificationButton.addEventListener("click", function () {
          Notification.requestPermission(async function (res) {
            console.log("Request permission result:", res);
            if (res === "granted") {
              await setupPushSubscription();
            } else {
              console.log("User denied push notifications:", res);
            }
          });
        });
      } else {
        notificationButton.setAttribute("disabled", "");
        notificationButton.classList.add("btn-outline-danger");
      }

      function urlBase64ToUint8Array(base64String) {
        const padding = "=".repeat((4 - (base64String.length % 4)) % 4);
        const base64 = (base64String + padding)
                .replace(/-/g, "+")
                .replace(/_/g, "/");

        const rawData = window.atob(base64);
        const outputArray = new Uint8Array(rawData.length);

        for (let i = 0; i < rawData.length; ++i) {
          outputArray[i] = rawData.charCodeAt(i);
        }
        return outputArray;
      }

      async function setupPushSubscription() {
        try {
          let reg = await navigator.serviceWorker.ready;
          let sub = await reg.pushManager.getSubscription();
          if (sub === null) {
            const publicKey = "BGUaZ5_SwjyYPbkK-lSsIjUSTxZA_m7qxNaN2KlPPmtwEZHU8FvH_WRijzewlaMPlaF5ZUxQwMteLe3PQsqvDbQ";
            sub = await reg.pushManager.subscribe({
              userVisibleOnly: true,
              applicationServerKey: urlBase64ToUint8Array(publicKey)
            });
            let res = await fetch("/saveSubscription", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
                Accept: "application/json",
              },
              body: JSON.stringify({ sub }),
            });
            if (res.ok) {
              alert(
                      "Yay, subscription generated and saved:\n" +
                      JSON.stringify(sub)
              );
            }
          } else {
            alert("You are already subscribed:\n" + JSON.stringify(sub));
          }
        } catch (error) {
          console.log(error);
        }
      }
    </script>
  </body>
</html>
